AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template to deploy OpenWebUI on a GPU instance
# Requires a DEFAULT VPC in the region; note g4dn.xlarge is only available in certain regions

Resources:
  OpenWebUISecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable remote access from my IP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: [YOUR IP ADDRESS]/32

  OpenWebUIInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: g4dn.xlarge
      SecurityGroups:
        - !Ref OpenWebUISecurityGroup
      ImageId: ami-04b70fa74e45c3917 # # us-east-1 / N. Virginia
      KeyName: [SSH KEYPAIR NAME]
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            VolumeSize: "20" # Size in GiB
            VolumeType: "gp3"
            DeleteOnTermination: "true"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install ca-certificates curl -y
          install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          chmod a+r /etc/apt/keyrings/docker.asc
          # Add the repository to Apt sources:
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update -y
          apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
          service docker start
          usermod -a -G docker ubuntu
          docker run -d --network=host -e OLLAMA_BASE_URL=http://127.0.0.1:11434 -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main

          apt-get install nginx -y
          systemctl start nginx
          systemctl enable nginx
          # Create SSL directory and generate self-signed certificate
          mkdir -p /etc/nginx/ssl
          openssl req -new -newkey rsa:2048 -days 365 -nodes -x509 \
          -subj "/C=US/ST=New York/L=New York/O=Company Name/OU=Org/CN=localhost" \
          -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt

          # Configure NGINX as reverse proxy
          # may need to adjust the port no's, as original docker container is running on 80
          echo '
          server {
          listen 443 ssl;
          server_name localhost;
          ssl_certificate /etc/nginx/ssl/nginx.crt;
          ssl_certificate_key /etc/nginx/ssl/nginx.key;
          location / {
          proxy_pass http://localhost:8080;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          }
          }' >> /etc/nginx/conf.d/reverse-proxy.conf
          # Restart NGINX to apply the configuration
          systemctl restart nginx

Outputs:
  InstanceId:
    Description: Instance ID of the OpenWebUI EC2 instance
    Value: !Ref OpenWebUIInstance

  PublicIP:
    Description: Public IP address of the OpenWebUI EC2 instance
    Value: !GetAtt
      - OpenWebUIInstance
      - PublicIp
